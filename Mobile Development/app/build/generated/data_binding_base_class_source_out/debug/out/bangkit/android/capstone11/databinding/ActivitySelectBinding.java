// Generated by view binder compiler. Do not edit!
package bangkit.android.capstone11.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import bangkit.android.capstone11.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySelectBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final Button btnCamera;

  @NonNull
  public final Button btnCheckup;

  @NonNull
  public final Button btnGallery;

  @NonNull
  public final ImageView ivCheckup;

  @NonNull
  public final View topBar;

  @NonNull
  public final TextView tvAppSuggestion;

  @NonNull
  public final TextView tvCheckup;

  private ActivitySelectBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView btnBack,
      @NonNull Button btnCamera, @NonNull Button btnCheckup, @NonNull Button btnGallery,
      @NonNull ImageView ivCheckup, @NonNull View topBar, @NonNull TextView tvAppSuggestion,
      @NonNull TextView tvCheckup) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnCamera = btnCamera;
    this.btnCheckup = btnCheckup;
    this.btnGallery = btnGallery;
    this.ivCheckup = ivCheckup;
    this.topBar = topBar;
    this.tvAppSuggestion = tvAppSuggestion;
    this.tvCheckup = tvCheckup;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySelectBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySelectBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_select, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySelectBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back;
      ImageView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btn_camera;
      Button btnCamera = ViewBindings.findChildViewById(rootView, id);
      if (btnCamera == null) {
        break missingId;
      }

      id = R.id.btn_checkup;
      Button btnCheckup = ViewBindings.findChildViewById(rootView, id);
      if (btnCheckup == null) {
        break missingId;
      }

      id = R.id.btn_gallery;
      Button btnGallery = ViewBindings.findChildViewById(rootView, id);
      if (btnGallery == null) {
        break missingId;
      }

      id = R.id.iv_checkup;
      ImageView ivCheckup = ViewBindings.findChildViewById(rootView, id);
      if (ivCheckup == null) {
        break missingId;
      }

      id = R.id.top_bar;
      View topBar = ViewBindings.findChildViewById(rootView, id);
      if (topBar == null) {
        break missingId;
      }

      id = R.id.tv_app_suggestion;
      TextView tvAppSuggestion = ViewBindings.findChildViewById(rootView, id);
      if (tvAppSuggestion == null) {
        break missingId;
      }

      id = R.id.tv_checkup;
      TextView tvCheckup = ViewBindings.findChildViewById(rootView, id);
      if (tvCheckup == null) {
        break missingId;
      }

      return new ActivitySelectBinding((ConstraintLayout) rootView, btnBack, btnCamera, btnCheckup,
          btnGallery, ivCheckup, topBar, tvAppSuggestion, tvCheckup);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
